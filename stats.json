{"leetcode":{"easy":2,"hard":1,"medium":6,"shas":{"1029-vertical-order-traversal-of-a-binary-tree":{"1029-vertical-order-traversal-of-a-binary-tree.java":"46895c3d2546a5c036b3c0e3278491fe43b25f3f","README.md":"cc712dafc645b72db251cf84985e1f2456c15d53","difficulty":"hard"},"1418-fair-distribution-of-cookies":{"1418-fair-distribution-of-cookies.java":"9f4da57e49997571acf0046f4a52f56e1f66bf8d","README.md":"7b64a7d9c47da35ca9f55a0b7b95e75a1cc8a776"},"README.md":{"":"e2cec1ac454e754ecf3c61acaf7ad75a32562ece"},"0662-maximum-width-of-binary-tree":{"0662-maximum-width-of-binary-tree.java":"7006ad2eddef865d9c827be054a4294c3bb3a7b5","README.md":"2619fced692af0b8f6e387761a072ab41d8b29e4","difficulty":"medium"},"stats.json":{"":"457a43a464c6126eadc21b72c6ebe78cd1be568c"},"0543-diameter-of-binary-tree":{"0543-diameter-of-binary-tree.java":"aee8d5fad9b42b44d9c830528598e191fd81fb98","README.md":"5ef438e39aa6f6497073598c4bd2c8274ababac7","difficulty":"easy"},"0236-lowest-common-ancestor-of-a-binary-tree":{"0236-lowest-common-ancestor-of-a-binary-tree.java":"501d00869dd683ff04e1f33e44d0cef97b281896","README.md":"2e410057370d1340e00c05396cfa7ccd934457ff","difficulty":"medium"},"0103-binary-tree-zigzag-level-order-traversal":{"0103-binary-tree-zigzag-level-order-traversal.java":"d3ac7e11f7d509c8c00cc04066798e6578b03a75","README.md":"fcd20aa2bad60f78f450527d135d90bfbc83d83a","difficulty":"medium"},"1160-letter-tile-possibilities":{"1160-letter-tile-possibilities.java":"73bfb66cdebae0a8f5b4b147d0b7440a64442b16","README.md":"ecdd62c8f4929550e19a9ef89fc7f383a06757fc","difficulty":"medium"},"0934-bitwise-ors-of-subarrays":{"0934-bitwise-ors-of-subarrays.java":"fa88726fe78e127047b37aebf074043465a318f8","README.md":"d40be9e1d1fa5f66e24a5822d95a2d298b1b98eb","difficulty":"medium"},"0118-pascals-triangle":{"0118-pascals-triangle.java":"a2b03ef23f562068de11eecadade1d4932ce14db","README.md":"549ce276ec0d25402deff66cf41209e7589d123d","difficulty":"easy"},"0106-construct-binary-tree-from-inorder-and-postorder-traversal":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal.java":"c305153a33ce7d64c65e505d3a0b4298eccdb1e6","README.md":"8169bc76429370954eb33bb078940c0a05066e29","difficulty":"medium"}},"solved":9}}